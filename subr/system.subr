if [ ! "$_SYSTEM_SUBR" ]; then
_SYSTEM_SUBR=1
###

conv2human()
{
	local lhal="B"
	local tmpmem="$1"
	local lval

	human_val=""

	for hval in "Kb" "Mb" "Gb" "Tb"; do
		mem=$(( tmpmem / 1024 ))
		[ "${mem}" = "0" ] && break
		tmpmem=${mem}
		lval="${hval}"
	done

	human_val="${tmpmem} ${lval}"
}


UNAME_CMD=$( which uname )
if [ ! -x "${UNAME_CMD}" ]; then
	echo "error: no such command: uname"
	exit 1
fi

TR_CMD=$( which tr )
if [ ! -x "${TR_CMD}" ]; then
	echo "error: no such command: tr"
	exit 1
fi

OS=$( ${UNAME_CMD} -s )

case "${OS}" in
	Linux)
		ECHO="echo"
		;;
	FreeBSD)
		ECHO="echo -e"
		;;
esac

# generic mandatory tools/script
MAIN_CMD="
awk
cat
chmod
chown
curl
cut
dd
fio
grep
head
jq
mkdir
mount
mv
mktemp
openssl
realpath
rm
sed
sort
strings
sysctl
tar
tail
tee
truncate
wc
whoami
"

case "${OS}" in
	Linux)
		id_token_file='/var/run/send-perf-stats'
		MAIN_CMD="${MAIN_CMD} lsblk"
		# Linux require -i'', not -i ' '
		sed_delimer=
		;;
	FreeBSD)
		id_token_file='/var/db/send-perf-stats'
		MAIN_CMD="${MAIN_CMD} camcontrol diskinfo"
		sed_delimer=" "
		;;
esac


if [ "${USE_TOR}" = "YES" ]; then
	MAIN_CMD="${MAIN_CMD} nc"
fi

for i in ${MAIN_CMD}; do
	mycmd=
	mycmd=$( which ${i} || true )		# true for 'set -e' case
	if [ ! -x "${mycmd}" ]; then
		echo "${pgm} error: no such executable dependency/requirement: ${i}"
		exit 1
	fi

	MY_CMD=$( echo ${i} | ${TR_CMD} '\-[:lower:]' '_[:upper:]' )
	MY_CMD="${MY_CMD}_CMD"
	eval "${MY_CMD}=\"${mycmd}\""
done

MY_USER=$( ${WHOAMI_CMD} )
if [ "${MY_USER}" != "root" ]; then
	echo "${pgm} error: needs root privileges, my user: ${MY_USER}"
	exit 1
fi

if [ -r /etc/os-release ]; then
	NAME=
	PRETTY_NAME=
	. /etc/os-release
	if [ -n "${NAME}" ]; then
		OPSYS="${NAME}"
	elif [ -n "${PRETTY_NAME}" ]; then
		OPSYS="${PRETTY_NAME}"
	else
		OPSYS="${OS}"
	fi
fi


###
fi
