if [ ! "$_SPACEVM_SUBR" ]; then
_SPACEVM_SUBR=1
###

fio_loop()
{
	[ -r /tmp/run-fio-spacevm-volumes.conf ] && ${RM_CMD} -f /tmp/run-fio-spacevm-volumes.conf
	trap "${RM_CMD} -f /tmp/run-fio-spacevm-volumes.conf" HUP INT ABRT BUS TERM EXIT
	${MOUNT_CMD} | ${GREP_CMD} "on /storages/" | while read _src _on _mnt _type _fs _nop; do
		#echo "s:${_src} o:${_on} m:${_mnt} t:${_type} f:[${_fs}]"
		# TODO: skip for local! see below
		case "${_fs}" in
			gfs2|zfs|ext4)
			echo "found pool [${_fs}]: ${_mnt}"
			echo "${_fs} ${_mnt}" >> /tmp/run-fio-spacevm-volumes.conf
			;;
		esac
	done

	echo "${FIND_CMD} /storages/local/ -maxdepth 1 -mindepth 1 -type d -exec ${BASENAME_CMD} {} \;"
	if [ -d /storages/local ]; then
		${FIND_CMD} /storages/local/ -maxdepth 1 -mindepth 1 -type d -exec ${BASENAME_CMD} {} \; | while read _pool_name; do
			_mnt="/storages/local/${_pool_name}"
			_fs="local"
			echo "found local pool [${_fs}]: ${_mnt}"
			echo "${_fs} ${_mnt}" >> /tmp/run-fio-spacevm-volumes.conf
		done
	fi

	#systemd-1 on /storages/gfs2/gfs2_3053831c type autofs (rw,relatime,fd=61,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=35865)
	#systemd-1 on /storages/gfs2/gfs2_6f66bb21 type autofs (rw,relatime,fd=62,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=34844)
	#/dev/mapper/veil_sys_vg01-local_storage on /storages/local type ext4 (rw,relatime,stripe=64)
	#z150_11 on /storages/zfs/z150_11 type zfs (rw,noatime,xattr,posixacl)
	#/dev/mapper/3600143801259dcf30001000001640000 on /storages/gfs2/gfs2_3053831c type gfs2 (rw,noatime,nodiratime,debug,x-systemd.automount,_netdev)

	if [ -r /tmp/run-fio-spacevm-volumes.conf ]; then
		[ ! -d ${progdir}/fio/tests ] && ${MKDIR_CMD} -p ${progdir}/fio/tests
		${CAT_CMD} /tmp/run-fio-spacevm-volumes.conf | while read _fs _mnt; do
			IN_USE=$( df -h ${_mnt} | ${GREP_CMD} -v Filesystem | ${AWK_CMD} '{printf $5}' )
			echo "fs:${_fs},pool:${_mnt},inuse:${IN_USE}" > ${progdir}/fio/tests/extra_info.txt
			echo "${progdir}/fio/tests/extra_info.txt saved"
			cat ${progdir}/fio/tests/extra_info.txt
			# Linux require </dev/tty ;-/
			${ECHO} "${N1_COLOR}Pool: ${N2_COLOR}${_mnt}${N0_COLOR}"
			${progdir}/run-fio -p ${_mnt}/tmp/test </dev/tty && ${progdir}/send-fio
		done
	else
		${progdir}/run-fio </dev/tty && ${progdir}/send-fio
		_ret=$?
		return ${_ret}
	fi
}

###
fi
