#!/bin/sh
pgm="${0##*/}"		# Program basename
progdir="${0%/*}"	# Program directory

set -e
. ${progdir}/config
. ${progdir}/subr/color.subr
. ${progdir}/subr/system.subr
. ${progdir}/subr/network.subr
set +e

## MAIN
init_color

## FIO_ MACROS/PARAMS
FIO_PARAMS="
DIRECTORY
RUNTIME
BS
IOENGINE
SYNC
DIRECT
NUMJOBS
SIZE
IODEPTH
"

echo "${CURL_CMD} -o /tmp/test.conf ${BENCH_CONF_URL}"
${CURL_CMD} -o /tmp/test.conf ${BENCH_CONF_URL} > /tmp/curl.$$ 2>&1
ret=$?

trap "${RM_CMD} -f /tmp/curl.$$" HUP INT ABRT BUS TERM EXIT

if [ ${ret} -ne 0 ]; then
	echo "curl error: ${ret}"
	${CAT_CMD} /tmp/curl.$$
	exit 1
else
	echo "fetched config:"
	cat /tmp/test.conf
fi

unset TYPE PROFILE
. /tmp/test.conf

if [ -z "${TYPE}" ]; then
	echo "no such benchmark TYPE specified: ${BENCH_CONF_URL}"
	exit 1
fi
if [ -z "${PROFILE}" ]; then
	echo "no such benchmark PROFILE specified: ${BENCH_CONF_URL}"
	exit 1
fi

if [ -r /etc/os-release ]; then
	NAME=
	PRETTY_NAME=
	. /etc/os-release
	if [ -n "${PRETTY_NAME}" ]; then
		OPSYS="${PRETTY_NAME}"
	elif [ -n "${NAME}" ]; then
		OPSYS="${NAME}"
	else
		OPSYS="${OS}"
	fi
fi

BENCH_CONFIG="${checkin_server}/${TYPE}/${PROFILE}"

${CURL_CMD} -o /tmp/profile.conf.tpl ${BENCH_CONFIG} 2>&1 | ${TEE_CMD} -a /tmp/curl.$$
ret=$?
if [ ${ret} -ne 0 ]; then
	echo "curl error: ${ret}"
	${CAT_CMD} /tmp/curl.$$
	exit 1
fi
${RM_CMD} /tmp/curl.$$

TYPE_UPPER=$( echo "${TYPE}" | ${TR_CMD} '[:lower:]' '[:upper:]' )

eval MY_PARAMS="\$${TYPE_UPPER}_PARAMS"

# overrides
#FIO_DIRECTORY="/storages/local${FIO_DIRECTORY}"
#FIO_DIRECTORY="/storages/zfs/z150_12${FIO_DIRECTORY}"
#FIO_IOENGINE="libaio"

if [ -n "${MY_PARAMS}" ]; then
	for i in ${MY_PARAMS}; do
		eval VAL="\$${TYPE_UPPER}_${i}"
#		echo "X $VAL"
		[ -z "${VAL}" ] && continue
#		sed -i'' "s#%%i%%#${VAL}#g" /tmp/profile.conf.tpl
		${SED_CMD} -i${sed_delimer}'' -Ees:"%%${i}%%":"${VAL}":g /tmp/profile.conf.tpl
	done
fi

${MV_CMD} /tmp/profile.conf.tpl /tmp/profile.fio
echo "FIO_DIR: ${FIO_DIRECTORY}"

[ -d ${progdir}/fio/tests ] && ${RM_CMD} -rf ${progdir}/fio/tests
${MKDIR_CMD} -p ${progdir}/fio/tests/4k

# VEIL
#IN_USE=$( df -h /storages/local/tmp/test/job.0.0 | ${GREP_CMD} -v Filesystem | ${AWK_CMD} '{printf $5}' )
#echo "pool:${FIO_DIRECTORY},inuse:${IN_USE}" > ${progdir}/fio/tests/extra_info.txt

echo "CHECK for: ${FIO_DIRECTORY}/job.0.0"
if [ -n "${FIO_DIRECTORY}" -a "${FIO_DIRECTORY}" != "/" ]; then
	if [ -d "${FIO_DIRECTORY}" ]; then
		if [ -r "${FIO_DIRECTORY}/job.0.0" ]; then
			echo "Clean dir: ${FIO_DIRECTORY}"
			${RM_CMD} -rf "${FIO_DIRECTORY}"
		else
			echo "no such dir for clean?: ${FIO_DIRECTORY}"
		fi
	fi
fi
${MKDIR_CMD} -p "${FIO_DIRECTORY}"

CBSD_PERF_DISTRO=
[ -r /etc/rc.conf ] && . /etc/rc.conf
if [ "${CBSD_PERF_DISTRO}" = "1" ]; then
	cp -a /tmp/profile.fio /tmp/profile.bak
	grep -v directory /tmp/profile.bak > /tmp/profile.fio
	echo "filename=/dev/vtbd0" >> /tmp/profile.fio
fi

echo "${FIO_CMD} --output-format=json --output=${progdir}/fio/tests/4k/randread-1-2.json /tmp/profile.fio"
${FIO_CMD} --output-format=json --output=${progdir}/fio/tests/4k/randread-1-2.json /tmp/profile.fio
_ret=$?


# Clean
if [ -n "${FIO_DIRECTORY}" -a "${FIO_DIRECTORY}" != "/" ]; then
	if [ -d "${FIO_DIRECTORY}" ]; then
		if [ -r "${FIO_DIRECTORY}/job.0.0" ]; then
			echo "Clean dir: ${FIO_DIRECTORY}"
			${RM_CMD} -rf "${FIO_DIRECTORY}"
		else
			echo "no such dir for clean?: ${FIO_DIRECTORY}"
		fi
	fi
fi

exit ${_ret}
